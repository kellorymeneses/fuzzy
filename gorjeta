
# Cria as variáveis do problema
comida = ctrl.Antecedent(np.arange(0, 11, 1), 'comida')
atendimento = ctrl.Antecedent(np.arange(0, 11, 1), 'atendimento')
gorjeta = ctrl.Consequent(np.arange(0, 26, 1), 'gorjeta')

# Cria o mapeamento entre valores do problema
comida.automf(names=['péssima', 'mediana', 'deliciosa'])


# Cria as funções usando tipos variados
atendimento['ruim'] = fuzz.trimf(atendimento.universe, [0, 0, 5])
atendimento['aceitável'] = fuzz.trimf(atendimento.universe, 5, 2)
atendimento['excelente'] = fuzz.trimf(atendimento.universe, 10,3)

gorjeta['baixa'] = fuzz.trimf(gorjeta.universe, [0, 0, 13])
gorjeta['média'] = fuzz.trimf(gorjeta.universe, [0, 13,15, 25])
gorjeta['alta'] = fuzz.trimf(gorjeta.universe, [15, 25, 25])

#criando regras de decisão
rule1 = ctrl.Rule(atendimento['excelente'] & comida['deliciosa'], gorjeta['alta'])
rule2 = ctrl.Rule(atendimento['aceitável'], & comida['mediana'] gorjeta['média'])
rule3 = ctrl.Rule(atendimento['ruim'] & comida['péssima'], gorjeta['baixa'])

#criando o controlador fuzzy
gorjeta_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
gorjeta_simulador = ctrl.ControlSystemSimulation(gorjeta_ctrl)

# Entrando com alguns valores para qualidade da comida e do atendimento
gorjeta_simulador.input['comida'] = 3.5
gorjeta_simulador.input['atendimento'] = 9.4

# Computando o resultado
gorjeta_simulador.compute()
print(gorjeta_simulador.output['gorjeta'])
